[user]
	name = Piotr Findeisen
	email = piotr.findeisen@gmail.com
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
[alias]
	ap = add -p
	apply-patches = am --signoff --3way --whitespace=error
	br = branch
	chpr = cherry-pr
	ci = commit -v
	co = checkout
	copr = ! git fpr "$1" && git checkout FETCH_HEAD && :
	cp = cherry-pick
	cpc = ! git -c core.editor=true cherry-pick --continue
	cpi = cherry-pick -X ignore-all-space
	dc = diff --cached
	di = diff
	edit = "!sh -c 'GIT_SEQUENCE_EDITOR=\"sed -i -e \\\"1 s/pick/edit/\\\"\" git rebase --no-autosquash -i `git rev-parse $0`^'"
	fetch = fetch --prune
	fpr = ! git fetch origin \"pull/$1/head\" && :
	git = "!git"
	lg = log --pretty=tformat:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%C(yellow)%d%Creset' --abbrev-commit --date=relative
	llg = locallog
	pushbranch = ! git -c push.default=simple push
	rb = rebase
	rbi = rebase -i
	ret = rebase --edit-todo
	rc = ! env EDITOR=: git rebase --continue
	showr = show --notes=refs/notes/review
	shfr = show --pretty=fuller
	st = status
	sync = "! git pull --rebase && git pu "
	up = "!git update-index -q --refresh; if git diff-index --quiet --cached HEAD --ignore-submodules -- && git diff-files --quiet --ignore-submodules; then git pull --rebase; else git stash && { git pull --rebase ; git stash pop; }; fi"
	dlb = delete-local-branch
[gui]
	fontui = -family \"nimbus sans l\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
	diffcontext = 4
[diff]
	noprefix = true
[rebase]
	autosquash = no
[push]
	default = nothing
[core]
	excludesfile = ~/.gitignore
#	pager = diff-so-fancy | less --tabs=4 -RFX
[fetch]
	prune = true
#[remote "origin"]
	#tagOpt = --tags
[rerere]
	enabled = 1
[merge]
	renameLimit = 0
	conflictstyle = diff3
[log]
	follow = true
[advice]
	skippedCherryPicks = false
