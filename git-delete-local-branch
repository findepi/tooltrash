#!/bin/bash

set -euo pipefail

branch="$(git symbolic-ref --short HEAD)"
head="$(git rev-parse HEAD)"
default_branch="$(git master)"

local_commits="$(git log HEAD --not --remotes --oneline | wc -l)"

if [ "${local_commits}" -eq 0 ]; then
    # Pushed, safe to delete locally
    set -x
    git checkout "${default_branch}"
    git branch -D "${branch}"
    exit
fi

# Local branch created with github CLI `gh pr checkout` won't have a regular
# remote, and will fetch into FETCH_HEAD
if true &&
    remote="$(git config "branch.${branch}.remote")" &&
    remote_branch="$(git config "branch.${branch}.merge")" &&
    git fetch "${remote}" "${remote_branch}"; then
    local_commits="$(git log FETCH_HEAD..HEAD --oneline | wc -l)"
    if [ "${local_commits}" -eq 0 ]; then
        # Pushed, safe to delete locally
        set -x
        git checkout "${default_branch}"
        git branch -D "${branch}"
        exit
    fi
fi

progname="$(basename "$0")"
echo "${progname}: Error: Branch ${branch} does not appear to be pushed externally." >&2
echo "${progname}: Error: Unsafe to delete. Use can delete it with:" >&2
echo "git checkout '${default_branch}' && git branch -D '${branch}'" >&2
exit 1
